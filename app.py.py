# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dKZah4oWTJdti0mhbsnr7nf0qUaIMehl
"""



import streamlit as st
import pandas as pd
import yfinance as yf
import matplotlib.pyplot as plt

st.title("ðŸ“ˆ TJR Strategy - EUR/USD vs GBP/USD")


@st.cache_data
def load_data():
    eurusd = yf.download("EURUSD=X", period="60d", interval="1h")
    gbpusd = yf.download("GBPUSD=X", period="60d", interval="1h")

    # Rename columns to single level for easier access
    eurusd.columns = [f"{col[0]}_{col[1]}" for col in eurusd.columns]
    gbpusd.columns = [f"{col[0]}_{col[1]}" for col in gbpusd.columns]

    return eurusd, gbpusd

eurusd, gbpusd = load_data()

# Access columns using the new single-level names
eurusd['smt_bullish'] = (eurusd['Low_EURUSD=X'] < eurusd['Low_EURUSD=X'].shift(1)) & (gbpusd['Low_GBPUSD=X'] < gbpusd['Low_GBPUSD=X'].shift(1))
eurusd['smt_bearish'] = (eurusd['High_EURUSD=X'] > eurusd['High_EURUSD=X'].shift(1)) & (gbpusd['High_GBPUSD=X'] > gbpusd['High_GBPUSD=X'].shift(1))

eurusd['BMS_up'] = (eurusd['High_EURUSD=X'] > eurusd['High_EURUSD=X'].shift(1)) & (eurusd['Close_EURUSD=X'] > eurusd['Open_EURUSD=X'])
eurusd['BMS_down'] = (eurusd['Low_EURUSD=X'] < eurusd['Low_EURUSD=X'].shift(1)) & (eurusd['Close_EURUSD=X'] < eurusd['Open_EURUSD=X'])

eurusd['FVG'] = eurusd['Low_EURUSD=X'].shift(1) > eurusd['High_EURUSD=X'].shift(2)

eurusd['Buy_Signal'] = eurusd['smt_bullish'] & eurusd['BMS_up'] & eurusd['FVG']
eurusd['Sell_Signal'] = eurusd['smt_bearish'] & eurusd['BMS_down'] & eurusd['FVG']

eurusd_reset = eurusd.reset_index()
# Access columns using the new single-level names after reset_index()
eurusd_reset = eurusd_reset.rename(columns={'index': 'Datetime'}) # Rename the index column after reset

eurusd_reset[['Datetime', 'Close_EURUSD=X', 'Buy_Signal', 'Sell_Signal']].to_csv("tjr_signals.csv", index=False)

st.success("âœ… Signals generated and saved to tjr_signals.csv")

fig, ax = plt.subplots(figsize=(12, 5))
ax.plot(eurusd.index, eurusd['Close_EURUSD=X'], label='EURUSD Price', color='blue')
ax.plot(eurusd.index[eurusd['Buy_Signal']], eurusd['Close_EURUSD=X'][eurusd['Buy_Signal']], '^', color='green', label='Buy Signal')
ax.plot(eurusd.index[eurusd['Sell_Signal']], eurusd['Close_EURUSD=X'][eurusd['Sell_Signal']], 'v', color='red', label='Sell Signal')
ax.set_title("TJR Strategy Signals")
ax.set_xlabel("Date")
ax.set_ylabel("Price")
ax.legend()
st.pyplot(fig)

st.subheader("ðŸ“„ Last 10 Signals")
st.dataframe(eurusd_reset[['Datetime', 'Close_EURUSD=X', 'Buy_Signal', 'Sell_Signal']].tail(10))
